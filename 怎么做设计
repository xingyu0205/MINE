https://github.com/Kenneth-Lee/MySummary/blob/master/%E8%BD%AF%E4%BB%B6%E6%9E%84%E6%9E%B6%E8%AE%BE%E8%AE%A1/%E9%80%BB%E8%BE%91%E9%93%BE%EF%BC%8C%E9%81%93%EF%BC%8C%E5%AD%A6%E5%92%8C%E6%9E%B6%E6%9E%84%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%AC%E8%B4%A8.rst 

在设计的过程中 本质用过去（已知）的事实+现在的事实来去预判或者达到未知的事实 

过去（已知）的事实和现在的事实都是最硬的，不可更改，最牢靠的。 

在设计的过程中 不需要做到面面俱到 不一定知道所有的过去和现在的事实，所以知不知上。建逻辑链不需要什么都知道。
但一定要切合事实和目标。知道越多和目标有关的事实就越容易做安排 比如旅行的时候会查看各种地方的开门关门时间才能安排最有效的路线。
比如下游如果已经有逻辑 就不要上游做奇怪的预判 万一下游的逻辑变了 你维护你的逻辑成本就高了。

而逻辑链的中间节点，是我们“推理”（猜）出来的，这些称为“学”。他们并非一定能变成 事实的。所以“绝学无忧”，我们必须有办法优化逻辑链，避免过多的概念引入，直接吃掉 我们的投资。
问题：学是猜不是事实 所以不牢固 就算实在要用学 也最好成功是用概率大的学。 相反如果是事实就会成功概率非常大？比如 想去一个地方 但没有信息说开不开门 猜开门 然后去 万一没开这件事就成不了

对逻辑链进行优化的方法是“不敢为主而为客”，每个逻辑事实的引入，都必须成为最简逻辑链的一部分。

逻辑链的维护成本分成两部分，
第一是逻辑链中，被定义为我们必须去 做的事情。（“野外有苹果”，“我们去捡”）->（“我们有苹果吃”），这个逻辑链中，“野外 有苹果”这是没有成本的，“我们去捡”，这个有成本。
理解： 多找到没有成本活着事情本来的逻辑 这样才会稳。 维护逻辑链 就是要确保事情的成功 维护成了 事情才能成 维护的成本越低越好 维护事实不需要成本 所以最好把逻辑建立在很多个事实上
降这个成本的方法是“无为”，
无为， 找到更多无成本的条件加入到我们的逻辑链中，这个成本就不存在了。圣人之道，善贷且成。
理解： 所里圣人得善于借力 借助于事实的力量

逻辑链维护成本的第二部分是“风险管理”
要降低这个成本，就是道德经中的三要素：慈，俭，不为天下先。
慈，团结更多的力量，一个人力量有限 做大事肯定要团队的力量。圣人就要有容人之量，宽厚 别人一犯错就骂 谁还敢为你干活，手下没人一个人什么都干不了linux千万行代码不是一个人能搞定的。 好比一个厨师可以做所有步骤 但简单的洗菜完全可以交给下手 厨师才可以更有效的产出更多
俭，不轻易用掉自己的筹码.
问题： 怎么算用掉筹码？要别人夸？
不为天下先，减少逻辑，就降低维护成本。控制了逻辑链的熵增，就留给了自己更多的变 化的余地。
问题：绝了学？多找到事实 从事实里找到最稳固的道 而不是新建立逻辑（学）
